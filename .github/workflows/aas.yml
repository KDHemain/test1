name: App With Github Actions with Docker CI/CD

on:
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn clean package -DskipTests
      
    - name: Naming jar file
      run: mv ./target/*.jar ./target/app.jar

    - name: Check jar file
      run: ls ./target

    - uses: actions/upload-artifact@v4
      with:
        name: app
        path: ./target/*.jar

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/app-with-actions:latest

  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
    - name: SSH to EC2 and prepare Docker Compose
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
        
          cd /home/ubuntu
          
          services:
            mysql:
              image: mysql:8.0
              environment:
                MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
                MYSQL_DATABASE: app
              volumes:
                - mysql-data:/var/lib/mysql
            app:
              image: ${{ secrets.DOCKERHUB_USERNAME }}/app-with-actions:latest
              environment:
                SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/appdb
                SPRING_DATASOURCE_USERNAME: root
                SPRING_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
              depends_on:
                - mysql
              ports:
                - "8080:8080"
          volumes:
            mysql-data:
              driver: local" > docker-compose.yml
              
          sudo docker-compose up -d
